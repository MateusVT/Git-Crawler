{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app.ts","webpack:///./config/config.ts","webpack:///./controllers/execute/execute.ts","webpack:///./controllers/server.ts","webpack:///./index.ts","webpack:///./middlewares/genericErrorHandler.ts","webpack:///./middlewares/nodeErrorHandler.ts","webpack:///./middlewares/notFoundHandler.ts","webpack:///./routes/routes.ts","webpack:///./routes/static.ts","webpack:///./utils/handleMock.ts","webpack:///external \"@octokit/rest\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"helmet\"","webpack:///external \"http-status-codes\"","webpack:///external \"morgan\"","webpack:///external \"tslib\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n","import bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport express from 'express';\r\nimport helmet from 'helmet';\r\nimport morgan from 'morgan';\r\nimport config from './config/config';\r\nimport genericErrorHandler from './middlewares/genericErrorHandler';\r\nimport notFoundHandler from './middlewares/notFoundHandler';\r\nimport router from './routes/routes';\r\nimport generateStaticRoutes from './routes/static';\r\n\r\nconst { name, version } = config;\r\nconst app: express.Application = express();\r\n\r\napp.locals.name = name;\r\napp.locals.version = version;\r\n\r\napp.use(cors());\r\napp.use(helmet());\r\napp.use(morgan('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use('/', router);\r\n\r\n\r\ngenerateStaticRoutes(router)\r\napp.use(genericErrorHandler);\r\napp.use(notFoundHandler);\r\n\r\n\r\nexport default app;\r\n","import * as dotenv from 'dotenv';\r\n\r\nimport app from '../../package.json';\r\nimport errors from './errors.json';\r\n\r\ndotenv.config();\r\n\r\nexport default {\r\n  errors,\r\n  name: app.name,\r\n  version: app.version,\r\n  host: '127.0.0.1',\r\n  environment: 'development',\r\n  appUrl: 'http://localhost:3000',\r\n  port: '3000',\r\n  pagination: {\r\n    page: 1,\r\n    maxRows: 20\r\n  },\r\n  logging: {\r\n    dir: process.env.LOGGING_DIR || 'logs',\r\n    level: process.env.LOGGING_LEVEL || 'debug',\r\n    maxSize: process.env.LOGGING_MAX_SIZE || '20m',\r\n    maxFiles: process.env.LOGGING_MAX_FILES || '7d',\r\n    datePattern: process.env.LOGGING_DATE_PATTERN || 'YYYY-MM-DD'\r\n  }\r\n};\r\n\r\n\r\n","import { Octokit } from '@octokit/rest';\r\nimport {\r\n  GetResponseDataTypeFromEndpointMethod\r\n} from \"@octokit/types\";\r\nimport { Request, Response } from 'express';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport { readMock } from '../../utils/handleMock';\r\n\r\nconst OAuthToken = \"116e57d4264d623d0c5ddea9a2840e0e0a4bb4a7\" //My Personal Token\r\nconst octokit: Octokit = new Octokit({ auth: OAuthToken });\r\nconst newcomer_labels = loadNewCommerLabels()//Load dataset of newcomer labels\r\n\r\n\r\nexport async function execute(req: Request, res: Response) {\r\n\r\n\r\n  const repo = { owner: \"airbnb\", name: \"lottie-android\" }\r\n\r\n\r\n  const rateLimit = await octokit.rateLimit.get()\r\n  console.log(\"Daily Rate Limit: \", rateLimit.data.rate)\r\n  console.log()\r\n\r\n  // const repo_pull_requests = await getAllFirstContributions(repo.owner, repo.name);//Return a list of all contributors with the date of theirs first contributions\r\n  const repo_labels = await getAllLabels(repo.owner, repo.name);//Return all labels from the given repository\r\n  console.log()\r\n  const repo_newcomer_labels = await findNewcomerLabelsOnRepository(repo.owner, repo.name, repo_labels);//Find all newcomer labels on the repositorie (based on our dataset)\r\n  console.log()\r\n  const repo_newcomer_labels_date = await getFirstOcurrenciesNewComerLabels(repo.owner, repo.name, repo_newcomer_labels.newcomer_labels);//Find all newcomer labels on the repositorie (based on our dataset)\r\n  console.log()\r\n\r\n  res.status(HttpStatus.OK).json(repo_newcomer_labels_date);\r\n  // res.status(HttpStatus.OK).end();\r\n}\r\n\r\nexport async function getAllFirstContributions(owner: string, repo: string) {\r\n  const contributors: string[] = []\r\n  const firstContributions: { login: string, createdAt: string }[] = []\r\n  let page = 0\r\n\r\n  console.log(\"- COLLECTING FIRST CONTRIBUTIONS FROM PROJECT \" + owner + \"/\" + repo + \" -\")\r\n  for await (const response of octokit.paginate.iterator(\r\n    \"GET /repos/:owner/:repo/pulls\",\r\n    {\r\n      owner: owner,\r\n      repo: repo,\r\n      state: \"all\",\r\n      per_page: 100\r\n    }\r\n  )) {\r\n\r\n    console.log(\"<-start for each {\" + page + \"}->\")\r\n    response.data.forEach((pullRequest: any) => {\r\n      if (!contributors.includes(pullRequest.user.login)) {\r\n        const pr = { login: pullRequest.user.login, createdAt: pullRequest.created_at }\r\n        contributors.push(pr.login)\r\n        firstContributions.push(pr)\r\n        console.log(pr)\r\n      }\r\n    })\r\n    page = page + 1\r\n    console.log(\"<-end for each->\")\r\n  }\r\n\r\n  return firstContributions\r\n}\r\n\r\nexport async function getAllLabels(owner: string, name: string) {\r\n  const labels: string[] = []\r\n  let page = 0\r\n  console.log(\"- COLLECTING LABELS FROM PROJECT \" + owner + \"/\" + name + \" -\")\r\n  for await (const response of octokit.paginate.iterator(\r\n    \"GET /repos/:owner/:repo/labels\",\r\n    {\r\n      owner: owner,\r\n      repo: name,\r\n      per_page: 100\r\n    }\r\n  )) {\r\n    console.log(\"<-start for each {\" + page + \"}->\")\r\n    response.data.forEach((label: any) => {\r\n\r\n      labels.push(label.name)\r\n      console.log(label.name)\r\n    }\r\n    )\r\n    page = page + 1\r\n    console.log(\"<-end for each->\")\r\n  }\r\n\r\n  return labels\r\n}\r\n\r\nexport async function getFirstOcurrenciesNewComerLabels(owner: string, name: string, newcomer_labels: string[]) {\r\n  let i = 0\r\n  let data: { owner: string, name: string, newcomer_labels: { name: string, created_at: string }[] } = { owner, name, newcomer_labels: [] }\r\n\r\n  console.log(\"- COLLECTING FIRST OCURRENCY OF LABELS \" + newcomer_labels.toString() + \" FROM PROJECT \" + owner + \"/\" + name + \" -\")\r\n  console.log(\"<-start for each {\" + i + \"}->\")\r\n  const promisses = await newcomer_labels.map(async (label) => {\r\n    const issues = await octokit.issues.listForRepo({ repo: name, owner: owner, sort: \"created\", direction: \"asc\", label: label, per_page: 1 })\r\n    const issue = issues.data[0]\r\n    if (issue != undefined) {\r\n      const label_data = { name: label, created_at: issue.created_at }\r\n      console.log(label_data)\r\n      data.newcomer_labels.push(label_data)\r\n    }\r\n    i = i + 1\r\n    console.log(\"i: \" + i)\r\n  })\r\n  console.log(\"<-end for each->\")\r\n  await Promise.all(promisses);\r\n  return data\r\n}\r\n\r\nfunction findNewcomerLabelsOnRepository(owner: string, name: string, repo_labels: string[]) {\r\n  const data: { owner: string, name: string, has_newcomer_label: boolean, newcomer_labels: string[] } = { owner: owner, name: name, has_newcomer_label: false, newcomer_labels: [] }\r\n  let page = 0\r\n  console.log(\"- COLLECTING LABELS FROM PROJECT \" + owner + \"/\" + name + \" -\")\r\n  console.log(\"<-start for each {\" + page + \"}->\")\r\n  repo_labels.forEach(label => {\r\n    if (newcomer_labels.includes(label.toLocaleLowerCase())) {\r\n      console.log(\"newcomer label found -> \" + label)\r\n\r\n      data.newcomer_labels.push(label)\r\n    }\r\n  })\r\n  if (data.newcomer_labels.length > 1) { data.has_newcomer_label = true }\r\n  console.log(\"<-end for each->\")\r\n\r\n  return data\r\n}\r\n\r\nfunction loadNewCommerLabels() {\r\n  // const labels_upforgrabs: { labels_up_for_grabs: string[] } = readMock(\"resources/labels/labels-up-for-grabs.json\")\r\n  // const labels_empiricas: { antigo_conjunto: string[], novo_conjunto: string[] } = readMock(\"resources/labels/labels-coletadas-empiricamente.json\")\r\n  // const all_newcomer_labels = [...new Set([...labels_upforgrabs.labels_up_for_grabs, ...labels_empiricas.antigo_conjunto, ...labels_empiricas.novo_conjunto])]\r\n\r\n  const all_newcomer_labels: string[] = readMock(\"resources/labels/all-labels.json\")\r\n  return all_newcomer_labels.map(label => label.toLocaleLowerCase())\r\n}\r\n\r\n\r\n\r\n//Types\r\ntype contributorsType = GetResponseDataTypeFromEndpointMethod<\r\n  typeof octokit.repos.listContributors\r\n>;","import { Request, Response } from 'express';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport router from '../routes/routes';\r\n\r\nexport function status(req: Request, res: Response): void {\r\n  res.status(HttpStatus.OK).json({\r\n    name: req.app.locals.name,\r\n    version: req.app.locals.version,\r\n    author: \"Mateus V. Torres\",\r\n    contact: \"mtsvtorres@gmail.com\",\r\n  });\r\n}\r\n\r\nexport function routes(_req: Request, res: Response): void {\r\n  const routes = router.stack.map(route => {\r\n    if (route.route && route.route.path) {\r\n      return { path: route.route.path, methods: route.route.methods }\r\n    }\r\n  })\r\n\r\n  res.status(HttpStatus.OK).json({ routes: routes });\r\n}","import app from './app';\r\nimport config from './config/config';\r\nimport nodeErrorHandler from './middlewares/nodeErrorHandler';\r\n\r\napp\r\n  .listen(config.port, () => {\r\n    console.info(`Server started at http://${config.host}:${config.port}`);\r\n  })\r\n  .on('error', nodeErrorHandler);\r\n","import * as HttpStatus from 'http-status-codes';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n\r\n/**\r\n * API Response Interface.\r\n */\r\ninterface APIResponse {\r\n  code: number;\r\n  message: string;\r\n  data?: any;\r\n}\r\n\r\n\r\n/**\r\n * Build error response for validation errors.\r\n *\r\n * @param  {Error} err\r\n * @return {Object}\r\n */\r\nfunction buildError(err: any): APIResponse {\r\n  if (err.isJoi) {\r\n    return {\r\n      code: HttpStatus.BAD_REQUEST,\r\n      message: HttpStatus.getStatusText(HttpStatus.BAD_REQUEST),\r\n      data:\r\n        err.details &&\r\n        err.details.map((error: any) => ({\r\n          param: error.path.join('.'),\r\n          message: error.message\r\n        }))\r\n    };\r\n  }\r\n\r\n  if (err.isBoom) {\r\n    return {\r\n      code: err.output.statusCode,\r\n      message: err.output.payload.message || err.output.payload.error\r\n    };\r\n  }\r\n\r\n  if (err.isCustom) {\r\n    return {\r\n      code: err.statusCode,\r\n      message: err.message\r\n    };\r\n  }\r\n\r\n  return {\r\n    code: HttpStatus.INTERNAL_SERVER_ERROR,\r\n    message: HttpStatus.getStatusText(HttpStatus.INTERNAL_SERVER_ERROR)\r\n  };\r\n}\r\n\r\n/**\r\n * Generic error response middleware for internal server errors.\r\n *\r\n * @param  {any} err\r\n * @param  {Request} req\r\n * @param  {Response} res\r\n * @param  {NextFunction} next\r\n * @returns void\r\n */\r\nexport default function genericErrorHandler(\r\n  err: any,\r\n  _: Request,\r\n  res: Response,\r\n  // TODO: Remove this.\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  __: NextFunction\r\n): void {\r\n  const error = buildError(err);\r\n\r\n  res.status(error.code).json(error);\r\n}\r\n","/**\r\n * Node startup error handler.\r\n *\r\n * @param  {NodeJS.ErrnoException} err\r\n * @returns <void>\r\n */\r\nexport default function nodeErrorHandler(err: NodeJS.ErrnoException): void {\r\n  switch (err.code) {\r\n    case 'EACCES':\r\n      process.exit(1);\r\n\r\n      break;\r\n\r\n    case 'EADDRINUSE':\r\n      process.exit(1);\r\n\r\n      break;\r\n\r\n    default:\r\n      throw err;\r\n  }\r\n}\r\n","import * as HttpStatus from 'http-status-codes';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n/**\r\n * Error response middleware for 404 not found.\r\n *\r\n * @param  {Request} req\r\n * @param  {Response} res\r\n * @param  {NextFunction} next\r\n * @returns <void>\r\n */\r\nexport default function notFoundError(\r\n  _: Request,\r\n  res: Response,\r\n  // TODO: Remove this\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  __: NextFunction\r\n): void {\r\n  res.status(HttpStatus.NOT_FOUND).json({\r\n    error: {\r\n      code: HttpStatus.NOT_FOUND,\r\n      message: HttpStatus.getStatusText(HttpStatus.NOT_FOUND)\r\n    }\r\n  });\r\n}\r\n","import { Router } from 'express';\r\nimport * as server from '../controllers/server';\r\n\r\nconst router: Router = Router();\r\n\r\nrouter.get('/', server.status);\r\nrouter.get('/routes', server.routes);\r\n\r\nexport default router;\r\n","import { Request, Response, Router } from 'express';\r\nimport * as HttpStatus from 'http-status-codes';\r\nimport * as executeController from '../controllers/execute/execute';\r\nfunction generateStaticRoutes(router: Router) {\r\n    //                   ----- GETs -----\r\n    router.get('/execute', executeController.execute);\r\n\r\n    //                   ----- POSTs -----\r\n    // router.post('/example', exampleController.validator, exampleController.example);\r\n\r\n    //                   ----- PATCHs -----\r\n    // router.patch('/example', exampleController.validator, exampleController.example);\r\n}\r\n\r\nexport default generateStaticRoutes;\r\n","import { readFileSync } from 'fs';\r\n\r\n/**\r\n * Parse de mock file returning HTTP code, Content-Type and the Object\r\n *\r\n * @param {string} filePath\r\n * @returns {boolean}\r\n */\r\nexport function readMock(filePath: string): any {\r\n  const file = readFileSync(filePath, 'utf8');\r\n  return JSON.parse(file);\r\n}\r\n","module.exports = require(\"@octokit/rest\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"helmet\");","module.exports = require(\"http-status-codes\");","module.exports = require(\"morgan\");","module.exports = require(\"tslib\");"],"sourceRoot":""}